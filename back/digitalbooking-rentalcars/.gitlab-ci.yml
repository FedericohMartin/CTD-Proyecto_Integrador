stages:
    - build
    - deploy

variables:
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  AWS_REGION: $AWS_REGION
  SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY
  DEPLOY_SERVER_IP: $DEPLOY_SERVER_IP

build-back:
    stage: build
    image: maven:3.6.3
    script:
        - cd back/digitalbooking-rentalcars/
        - echo "Building backend app..."
        - mvn clean install
        #- mvn compile
        #- mvn package
        - echo "Finished building the backend app."
    artifacts:
        expire_in: 1 week
        paths:
            - back/digitalbooking-rentalcars/target/consoleapp.jar
    only:
        - pipeline_para_CI-CD  # main

deploy-back:
    stage: deploy
    image: alpine:3.11
    before_script:
        - cd back/digitalbooking-rentalcars/
        - apk update && apk add openssh-client bash
        #- mkdir -p ~/.ssh
        - eval $(ssh-agent -s)
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
        - sudo systemctl status ssh
        #- touch ~/.ssh/config
        #- echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
        #- ssh-keyscan -H $DEPLOY_SERVER_IP >> ~/.ssh/known_hosts
    script:
        - echo "Deploying started..."
        #- ssh -o StrictHostKeyChecking=no ubuntu@$DEPLOY_SERVER_IP "sudo systemctl stop consoleapp.service"
        - scp -o StrictHostKeyChecking=no back/digitalbooking-rentalcars//target/consoleapp.jar ubuntu@$DEPLOY_SERVER_IP:~/console-app/
        - ssh -o StrictHostKeyChecking=no ubuntu@$DEPLOY_SERVER_IP "sudo systemctl start consoleapp.service"
        - echo "Finished deploying the app."
    only:
        - pipeline_para_CI-CD  # main