# stages:
#   - build
#   - deploy

# build project:
#   stage: build
#   image: node:18.12.1
#   script:
#     - cd front/booking
#     - npm install
#     - npm run build
#   artifacts:
#     paths:
#       - front/booking/build

# deploy project:
#   stage: deploy
#   image: 
#     name: amazon/aws-cli
#     entrypoint: [""]
#   script:
#     - pwd
#     - ls
#     - cd front/booking/
#     - echo "Deploying front-end app started..."
#     #- ssh -o StrictHostKeyChecking=no ubuntu@15.228.13.234 "sudo systemctl stop consoleapp.service"
#     #- scp -o StrictHostKeyChecking=no /front/booking/build/* ubuntu@15.228.13.234:~/var/www/html/
#     - aws s3 sync /front/booking/build/* s3://$DEV_S3_BUCKET
#     #- ssh -o StrictHostKeyChecking=no ubuntu@15.228.13.234 "sudo systemctl start consoleapp.service"
#     - echo "Finished deploying the frontend app."


stages:
  - build
  - run

variables:
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  AWS_REGION: $AWS_REGION
  DEV_S3_BUCKET: $DEV_S3_BUCKET
  PROD_S3_BUCKET: $PROD_S3_BUCKET

build_dev-front:
  stage: build
  image: node:18.12.1
  script:
    - cd front/booking
    - npm install
    #- npm audit fix --force
    - npm install react-icons --save
    - npm run build
  artifacts:
    paths:
      - ./front/booking/build
  only:
    refs:
      - pipeline_para_CI-CD  # dev

build_prod-front:
  stage: build
  image: node:18.12.1
  script: 
    - cd front/booking
    - npm install
    #- npm audit fix --force
    - npm install react-icons --save
    - npm run build
  artifacts:
    paths:
      - ./front/booking/build
  only:
    refs:
      - pipeline_para_CI-CD # main

# .deploy_aws:
#   image: python:latest
#   when: manual
#   script: |
#     pip install awscli #Install awscli tools
#     aws s3 sync ./front/booking/build/ s3://${S3_BUCKET}
    
deploy_dev:
  stage: run
  image: python:2
  dependencies:
    - build_dev-front
  #when: manual
  script: 
    #- python -m pip install --upgrade pip --root-user-action=ignore
    - pip install awscli #Install awscli tools
    - aws --version
    - aws s3 cp --recursive front/booking/build/ s3://$DEV_S3_BUCKET
    #- aws s3 sync ./front/booking/build/* s3://$DEV_S3_BUCKET
  only:
    refs:
      - pipeline_para_CI-CD   # dev

deploy_prod:
  extends: .deploy_aws
  stage: run
  dependencies:
    - build_prod-front
  before_script:
    - export S3_BUCKET=${PROD_S3_BUCKET}
  only:
    refs:
      - pipeline_para_CI-CD  # main


# stages:
#   - build
#   - run

# variables:
#   DEV_S3_BUCKET: ${BUCKET_DEV}
#   PROD_S3_BUCKET: ${BUCKET_PROD}

# .build-front:
#   image: node:18.12.1
#   script: |
#     cd front/booking/
#     yarn # Install all dependencies
#     yarn build:${APP_ENV} # Build command
#   artifacts:
#     paths:
#       - ./front/booking/build
      
# build_dev-front:
#   extends: .build-front
#   stage: build
#   before_script:
#     - export APP_ENV="dev"
#   only:
#     refs:
#       - pipeline_para_CI-CD  # dev

# build_prod-front:
#   extends: .build-front
#   stage: build
#   before_script:
#     - export APP_ENV="prod"
#   only:
#     refs:
#       - pipeline_para_CI-CD # main

# .deploy_aws:
#   image: python:latest
#   when: manual
#   script: |
#     pip install awscli #Install awscli tools
#     aws s3 sync ./front/booking/build/ s3://${S3_BUCKET}
    
# deploy_dev:
#   extends: .deploy_aws
#   stage: run
#   dependencies:
#     - build_dev-front
#   before_script:
#     - export S3_BUCKET=${DEV_S3_BUCKET}
#   only:
#     refs:
#       - pipeline_para_CI-CD   # dev

# deploy_prod:
#   extends: .deploy_aws
#   stage: run
#   dependencies:
#     - build_prod-front
#   before_script:
#     - export S3_BUCKET=${PROD_S3_BUCKET}
#   only:
#     refs:
#       - pipeline_para_CI-CD  # main